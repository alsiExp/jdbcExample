package org.jugru.jdbcExample.dao.executor;import org.jugru.jdbcExample.util.exceptions.DBException;import java.sql.*;import java.util.List;public class QueryExecutor {    private final Connection connection;    public QueryExecutor(Connection connection) {        this.connection = connection;    }    public int execUpdate(String query) {        try(Statement statement = connection.createStatement();) {            statement.execute(query);            int updated = statement.getUpdateCount();            return updated;        } catch (SQLException e) {            e.printStackTrace();            throw new DBException(e.getMessage());        }    }    public int execUpdate(String query, List<ParameterHolder> parameters) {        try(PreparedStatement preparedStatement = connection.prepareStatement(query)) {            for (ParameterHolder ph : parameters) {                preparedStatement.setObject(ph.getIndex(), ph.getValue(), ph.getSqlType());            }            preparedStatement.execute();            int updated = preparedStatement.getUpdateCount();            preparedStatement.close();            return updated;        } catch (SQLException e) {            e.printStackTrace();            throw new DBException(e.getMessage());        }    }    public <T> T execQuery(String query, ResultHandler<T> handler) {        try(Statement statement = connection.createStatement();) {            statement.executeQuery(query);            ResultSet rs = statement.getResultSet();            T val = handler.handle(rs);            rs.close();            statement.close();            return val;        } catch (SQLException e) {            e.printStackTrace();            throw new DBException(e.getMessage());        }    }}